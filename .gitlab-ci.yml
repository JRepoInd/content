default:
  image: docker-io.artifactory.pan.local/devdemisto/gitlab-content-ci:1.0.0.18863
  cache:
    key:
      files:
       - "dev-requirements-py3.txt"
       - "package-lock.json"
    paths:
      - venv/
      - node_modules/
    when: always
  before_script:
    - echo "=== Running before script ==="
    - git checkout $CI_COMMIT_BRANCH
    - mkdir -p -m 777 $ARTIFACTS_FOLDER/
    - |
      if [[ -f "$BASH_ENV" ]]; then
        source "$BASH_ENV"
      fi
    - echo "=== Creating new clean logs folder ==="
    - rm -rf $ARTIFACTS_FOLDER/logs
    - mkdir -p $ARTIFACTS_FOLDER/logs
    - echo "=== Granting execute permissions on files ==="
    - chmod +x ./Tests/scripts/*
    - chmod +x ./Tests/lastest_server_build_scripts/*
    - chmod +x ./Tests/Marketplace/*
    - echo "=== Installing Virtualenv ==="
    - |
     if [ -f "./venv/bin/activate" ]; then
       echo "found venv"
     else
      echo "installing venv"
      NO_HOOKS=1 SETUP_PY2=yes .hooks/bootstrap
     fi
     venv/bin/pip3 install -r .circleci/build-requirements.txt
     venv/bin/pip2 install -r dev-requirements-py2.txt
     source ./venv/bin/activate
    - git config diff.renameLimit 6000
    - export PATH="${PWD}/node_modules/.bin:${PATH}"
    - |
      if [ -n "${DEMISTO_SDK_NIGHTLY}" ]; then
        echo "Installing SDK"
        pip3 install git+https://github.com/demisto/demisto-sdk@master
      fi
    - echo "========= Installing SSH keys ========"
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - chmod 400 $OREGON_CI_KEY
    - ssh-add $OREGON_CI_KEY
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    - echo "======= Download configuration ========"
    - ./Tests/scripts/download_demisto_conf.sh

    - echo "========== Build Parameters =========="
    - set | grep -E "^NIGHTLY=|^INSTANCE_TESTS=|^SERVER_BRANCH_NAME=|^ARTIFACT_BUILD_NUM=|^DEMISTO_SDK_NIGHTLY=|^TIME_TO_LIVE=|^CONTRIB_BRANCH=|^FORCE_PACK_UPLOAD=|^PACKS_TO_UPLOAD=|^BUCKET_UPLOAD=|^GCS_MARKET_BUCKET=|^SLACK_CHANNEL="
    - python --version
    - python3 --version
    - node --version
    - npm --version
    - demisto-sdk --version

run-unittests-and-lint:
  stage: unittests-and-validations
  artifacts:
    expire_in: 48 hrs
    paths:
      - /builds/xsoar/content/unit-tests
      - /builds/xsoar/content/artifacts/*
    when: always
  script:
    - echo "====Trigger Private Build===="
    - |
      if [[ -n $FORCE_BUCKET_UPLOAD || -n $BUCKET_UPLOAD ]]; then
        if [[ $CIRCLE_BRANCH =~ pull/[0-9]+ ]]; then
          echo "Skipping - not running in contribution instance"
        else
          python3 Utils/trigger_private_build.py --github-token $GITHUB_TOKEN
        fi
      fi
    - echo "====Test Infrustracture===="
    - python3 -m pytest ./Tests/scripts/infrastructure_tests/ -v
    - python3 -m pytest ./Tests/Marketplace/Tests/ -v
    - python3 -m pytest ./Tests/scripts/utils/tests -v
    - python3 -m pytest ./Tests/tests -v
    - python3 -m pytest ./Tests/private_build/ -v
    - python3 -m pytest Utils -v
    - |
      if [ -n "${DEMISTO_SDK_NIGHTLY}" ] ; then
      ./Tests/scripts/sdk_pylint_check.sh
      fi
    - echo "====Run Unit Testing and Lint===="
    - |
      if [[ "$(echo "$GCS_MARKET_BUCKET" | tr '[:upper:]' '[:lower:]')" != "marketplace-dist" ]]; then
        echo "Skipping validations when uploading to a test bucket."
      else
        echo "demisto-sdk version: $(demisto-sdk --version)"
        echo "mypy version: $(mypy --version)"
        echo "flake8 py2 version: $(python2 -m flake8 --version)"
        echo "flake8 py3 version: $(python3 -m flake8 --version)"
        echo "bandit py2 version: $(python2 -m bandit --version 2>&1)"
        echo "bandit py3 version: $(python3 -m bandit --version 2>&1)"
        echo "vulture py2 version: $(python2 -m vulture --version 2>&1)"
        echo "vulture py3 version: $(python3 -m vulture --version 2>&1)"
        SHOULD_LINT_ALL=$(./Tests/scripts/should_lint_all.sh)
        mkdir ./unit-tests
        if [ -n "$SHOULD_LINT_ALL" ]; then
          echo -e  "----------\nLinting all because:\n${SHOULD_LINT_ALL}\n----------"
          demisto-sdk lint -p 8 -a -q --test-xml ./unit-tests --log-path ./artifacts --failure-report ./artifacts
        else
          demisto-sdk lint -p 8 -g -v --test-xml ./unit-tests --log-path ./artifacts --failure-report ./artifacts
        fi
      - echo "====Get Private Build Status===="
      - |
        if [[ -n $FORCE_BUCKET_UPLOAD || -n $BUCKET_UPLOAD ]]; then
          if [[ $CIRCLE_BRANCH =~ pull/[0-9]+ ]]; then
            echo "Skipping - not running in contribution instance"
          else
            python3 Utils/get_private_build_status.py --github-token $GITHUB_TOKEN
          fi
        fi
      - echo "====Run Slack Notifier===="
      - |
        if [ -n "${BUCKET_UPLOAD}" ]; then
          ./Tests/scripts/slack_notifier.sh 'bucket_upload_flow' '' "$SLACK_CHANNEL"
        else
          ./Tests/scripts/slack_notifier.sh 'unittests' ./env_results.json
        fi

variables:
  CONTENT_VERSION: "21.3.2"
  SERVER_VERSION: "6.0.0"
  GIT_SHA1: "6fee942518c6b2275a6cb61c1824574171cf58f9" # guardrails-disable-line disable-secrets-detection
  DONT_CACHE_LAST_RESPONSE: "true"
  GCS_MARKET_BUCKET: "marketplace-dist"
  SLACK_CHANNEL: "dmst-content-team"
  DEMISTO_README_VALIDATION: "true"
  ARTIFACTS_FOLDER: "/builds/xsoar/content/artifacts"
  BASH_ENV: "/builds/xsoar/content/artifacts/bash_env"
  PYTHONPATH: "/builds/xsoar/content"
  FEATURE_BRANCH_NAME: "v4.5.0"
# Gitlab CI/CD uses shallow fetch with default depth of 50, these arguments are used to override it
# See here for more about that https://docs.gitlab.com/ee/ci/pipelines/settings.html#git-shallow-clone  # disable-secrets-detection
  GIT_STRATEGY: clone
  GIT_DEPTH: 0


stages:
  - unittests-and-validations
  - create-instances
  - run-instances
  - upload-to-marketplace
